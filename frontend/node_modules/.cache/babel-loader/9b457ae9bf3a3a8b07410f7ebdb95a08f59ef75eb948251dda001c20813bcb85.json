{"ast":null,"code":"var _jsxFileName = \"/Users/anishsoni/Desktop/Lumen/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [description, setDescription] = useState(\"\");\n  const [userInput, setUserInput] = useState(\"\");\n  const [loading, setLoading] = useState(false); // State for loading indication\n\n  const handleInputChange = event => {\n    setUserInput(event.target.value);\n  };\n  const handleCaptureAndDescribe = async () => {\n    setLoading(true); // Set loading to true\n    try {\n      const response = await fetch(\"http://localhost:5001/generate-description\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_input: userInput\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setDescription(data.description);\n        setUserInput(\"\"); // Clear input after submission\n\n        // Trigger speech output for the description\n        await fetch(\"http://localhost:5001/speak\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            text: data.description\n          })\n        });\n      } else {\n        console.error('Error generating description:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false); // Set loading to false\n    }\n  };\n  const startVoiceRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.onstart = () => {\n      console.log('Voice recognition started. Try speaking into the microphone.');\n    };\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setUserInput(transcript); // Set the recognized text to userInput\n    };\n    recognition.onerror = event => {\n      console.error('Error occurred in recognition: ' + event.error);\n    };\n    recognition.onend = () => {\n      console.log('Voice recognition ended.');\n    };\n    recognition.start();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Vision for All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input-area\",\n          value: userInput,\n          onChange: handleInputChange,\n          placeholder: \"Ask what I see...\",\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startVoiceRecognition,\n            className: \"primary-btn\",\n            children: \"\\uD83C\\uDFA4 Start Speaking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCaptureAndDescribe,\n            className: \"primary-btn\",\n            children: \"Analyze and Describe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-text\",\n          children: \"Analyzing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"description-section\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: description ? `Description: ${description}` : \"No description yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Designed with Accessibility in Mind\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xVZqSaDG30CDujXGmX+Ej1DoQ5o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","description","setDescription","userInput","setUserInput","loading","setLoading","handleInputChange","event","target","value","handleCaptureAndDescribe","response","fetch","method","headers","body","JSON","stringify","user_input","ok","data","json","text","console","error","statusText","startVoiceRecognition","SpeechRecognition","window","webkitSpeechRecognition","recognition","onstart","log","onresult","transcript","results","onerror","onend","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/anishsoni/Desktop/Lumen/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles/App.css';\n\nfunction App() {\n  const [description, setDescription] = useState(\"\");\n  const [userInput, setUserInput] = useState(\"\");\n  const [loading, setLoading] = useState(false); // State for loading indication\n\n  const handleInputChange = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  const handleCaptureAndDescribe = async () => {\n    setLoading(true); // Set loading to true\n    try {\n      const response = await fetch(\"http://localhost:5001/generate-description\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ user_input: userInput }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setDescription(data.description);\n        setUserInput(\"\"); // Clear input after submission\n\n        // Trigger speech output for the description\n        await fetch(\"http://localhost:5001/speak\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ text: data.description }),\n        });\n      } else {\n        console.error('Error generating description:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false); // Set loading to false\n    }\n  };\n\n  const startVoiceRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n\n    recognition.onstart = () => {\n      console.log('Voice recognition started. Try speaking into the microphone.');\n    };\n\n    recognition.onresult = (event) => {\n      const transcript = event.results[0][0].transcript;\n      setUserInput(transcript); // Set the recognized text to userInput\n    };\n\n    recognition.onerror = (event) => {\n      console.error('Error occurred in recognition: ' + event.error);\n    };\n\n    recognition.onend = () => {\n      console.log('Voice recognition ended.');\n    };\n\n    recognition.start();\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header>\n        <h1 className=\"app-title\">Vision for All</h1>\n      </header>\n      <main>\n        <div className=\"input-card\">\n          <textarea \n            className=\"input-area\"\n            value={userInput} \n            onChange={handleInputChange} \n            placeholder=\"Ask what I see...\" \n            rows={3} \n          />\n          <div className=\"button-group\">\n            <button onClick={startVoiceRecognition} className=\"primary-btn\">\n              ðŸŽ¤ Start Speaking\n            </button>\n            <button onClick={handleCaptureAndDescribe} className=\"primary-btn\">\n              Analyze and Describe\n            </button>\n          </div>\n          {loading && <p className=\"loading-text\">Analyzing...</p>} {/* Loading feedback */}\n        </div>\n        <section className=\"description-section\">\n          <h2>{description ? `Description: ${description}` : \"No description yet.\"}</h2>\n        </section>\n      </main>\n      <footer>\n        <p>Designed with Accessibility in Mind</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}